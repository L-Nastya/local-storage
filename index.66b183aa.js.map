{"mappings":"YACgBA,SAASC,cAAc,YAEtBD,SAASC,cAAc,YAEvBD,SAASC,cAAc,UAJxC,IAkNMC,EAASF,SAASC,cAAc,QAChCE,EAAUH,SAASC,cAAc,SACjCG,EAAUJ,SAASC,cAAc,SAOjCI,GANSL,SAASC,cAAc,QACtBD,SAASC,cAAc,SACtBD,SAASC,cAAc,UACzBD,SAASC,cAAc,MACxBD,SAASC,cAAc,MACtBD,SAASC,cAAc,MACtBD,SAASC,cAAc,OACjCK,EAAWN,SAASC,cAAc,MAIlCM,EAAQ,CACZ,CACEC,MAAO,mBACPC,OAAQ,mBACRC,OAAQ,MAEV,CACEF,MAAO,0BACaC,OAAZ,eACGC,OAAH,MAEV,CACEF,MAAO,wBACYC,OAAX,oBACQC,OAAR,OAwGZR,EAAOS,iBAAiB,SAAS,SAACC,GAChC,IAAMC,EAAOC,aAAaC,QAAQ,WAClC,IACE,IAAMC,EAAWH,EAAOI,KAAKC,MAAML,GAAQ,GAC3CG,EAASG,KAAKZ,EAAM,IACpBa,QAAQC,IAAIL,GACZ,IAAMM,EAAcL,KAAKM,UAAUP,GACnCF,aAAaU,QAAQ,UAAWF,GAChC,MAAOG,GACPL,QAAQC,IAAI,qBAsBhBhB,EAAQM,iBAAiB,SAAS,WAChC,IACMe,EAAKT,KAAKC,MAAMJ,aAAaC,QAAQ,YAC3CK,QAAQC,IAAIK,GAkCZ,IACMC,EADOpB,EAAM,GACHC,MAChBY,QAAQC,IAAIM,GACR,IAAMC,EAAKF,EAAGG,WAAU,SAAAC,G,OAAUA,EAAOtB,QAAUmB,KACnDP,QAAQC,IAAIO,GACX,IAAMG,EAAKL,EAAGM,OAAOJ,EAAI,GACzBR,QAAQC,IAAIU,GACf,IAAMT,EAAcL,KAAKM,UAAUG,GACpCZ,aAAaU,QAAQ,UAAWF,MAenChB,EAASK,iBAAiB,SAAS,WACjC,IAAMsB,EAAKhB,KAAKC,MAAMJ,aAAaC,QAAQ,YAC3CK,QAAQC,IAAIY,GACZ,IACMC,EADQ3B,EAAM,GACHC,MACjBY,QAAQC,IAAIa,GACR,IAAMC,EAAMF,EAAIJ,WAAU,SAAAC,G,OAAUA,EAAOtB,QAAU0B,KACrDd,QAAQC,IAAIc,GACX,IAAMC,EAAMH,EAAID,OAAOG,EAAK,GAC5Bf,QAAQC,IAAIe,GACf,IAAMC,EAAepB,KAAKM,UAAUU,GACrCnB,aAAaU,QAAQ,UAAWa,MAEnClC,EAAQQ,iBAAiB,SAAS,SAACC,GACjC,IAAMC,EAAOC,aAAaC,QAAQ,WAEhC,IACE,IAAMC,EAAWH,EAAOI,KAAKC,MAAML,GAAQ,GAE3CG,EAASG,KAAKZ,EAAM,IACpB,IAAMe,EAAcL,KAAKM,UAAUP,GACnCF,aAAaU,QAAQ,UAAWF,GAChC,MAAOG,GACPL,QAAQC,IAAI,qBAMlBjB,EAAQO,iBAAiB,SAAS,WAC5B,IAAME,EAAOC,aAAaC,QAAQ,WACpC,IACE,IAAMC,EAAWH,EAAOI,KAAKC,MAAML,GAAQ,GAC3CG,EAASG,KAAKZ,EAAM,IACpB,IAAMe,EAAcL,KAAKM,UAAUP,GACnCF,aAAaU,QAAQ,UAAWF,GAChC,MAAOG,GACPL,QAAQC,IAAI,qB","sources":["src/index.js"],"sourcesContent":["// import MovieApiService from \"./api\"\nconst gallery = document.querySelector(\"#gallery\")\n// const sdfa = document.querySelector(\".fghjk\")\nconst watchBtn = document.querySelector(\".watched\")\n// // console.log(watchBtn)\nconst queueBtn = document.querySelector(\".queue\")\n// const addwatchBtn = document.querySelector(\"#addwarch\")\n// console.log(addwatchBtn)\n\n// const addqueBtn = document.querySelector(\".addqueue\")\n// const input = document.querySelector(\"input\")\n// const form = document.querySelector(\"search-form\")\n\n// // const addw = document.createElement(\"button\");\n// // addw.classList.add(\"addwarch\")\n// // addw.innerText= \"Add to watched\"\n// // console.log(addw)\n// //    gallery.insertAdjacentHTML(\"afterbegin\", addw.outerHTML)\n\n// const newMovieApiService = new MovieApiService();\n\n//  renderCard()\n\n// async function  renderCard() {\n//   try {\n//     const request = await   newMovieApiService.fetchPopular();\n//     ghjkl(request)\n \n//   } catch (error) {\n//     console.log(error)\n\n//   }\n// }\n\n// function ju(to) {\n  \n// }\n// // function sdfghjk(sdfg) {\n\n// //  const markup = sdfg.map(({ original_title, poster_path }) => {\n// // document.getElementById('gallery').appendChild(addw);\n    \n//     // gallery.insertAdjacentHTML(\"afterbegin\", addw.outerHTML)\n// //    return `<div><img class=\"photo\" src=\"${poster_path}\" alt=\"картинка;\" loading=\"lazy\" />\n// //   <div class=\"info\">\n// //     <p class=\"info-item\">\n// //       <b>Title</b>\n// //       ${original_title}\n// //     </p></div>`\n\n// //    }).join(\"\")\n// //      const addw = document.createElement(\"button\");\n// // addw.classList.add(\"addwarch\")\n// //   addw.innerText = \"Add to watched\"\n// //   // document.getElementById('gallery').appendChild(addw);\n// //   gallery.insertAdjacentHTML(\"beforeend\", markup)\n// //   // gallery.insertAdjacentHTML(\"afterbegin\", addw.outerHTML)\n// //   addw.after(document.querySelector(\".info-item\"))\n \n// // const addw = document.createElement(\"button\");\n// // addw.classList.add(\"addwarch\")\n// // addw.innerText = \"Add to watched\"\n  \n// // const cont= document.createElement(\"div\");\n// // cont.classList.add(\"container\")\n// // cont.prepend(pic, info, addw)\n  \n// // const pic = document.createElement(\"img\");\n// // pic.classList.add(\"photo\")\n// // pic.src = `${poster_path}`;\n// // image.alt = \"picture\";\n  \n// // const info = document.createElement(\"p\");\n// // info.classList.add(\"info\")\n// //   info.innerText =  `${original_title}`\n\n// //   gallery.prepend(cont)\n\n// //   }\n// function ghjkl(hjk) {\n//   // let abc = [];\n//   const markup = hjk.map(({ original_title, poster_path }) => {\n//     const addw = document.createElement(\"button\");\n//     // addw.classList.add(\"addwarch\")\n//     addw.innerText = \"Add to watched\"\n \n//     const qu = document.createElement(\"button\");\n//     qu.classList.add(\"queue\")\n//     qu.innerText = \"Add to queue\"\n  \n//     const pic = document.createElement(\"img\");\n//     pic.classList.add(\"photo\")\n//     pic.src = `${poster_path}`;\n//     pic.alt = \"picture\";\n  \n//     const info = document.createElement(\"p\");\n//     info.classList.add(\"info\")\n//     info.innerText = `${original_title}`\n\n//     const cont = document.createElement(\"div\");\n//     cont.classList.add(\"container\")\n//     cont.prepend(pic, info, addw, qu)\n \n//     gallery.prepend(cont)\n//     addw.addEventListener(\"click\", () => {\n//       const list = localStorage.getItem(\"movie\");\n//       console.log(list)\n//       try {\n//         const listData = list ? JSON.parse(list) : [];\n//         listData.push(hjk);\n//         const updatedList = JSON.stringify(listData);\n//         localStorage.setItem(\"movie\", updatedList);\n//       } catch (error) {\n//         console.log(\"parsing error\");\n//       }\n//       })\n  \n\n//   }).join('')\n// }\n// addwatchBtn.addEventListener(\"click\",localStorage.setItem(\"movie\", JSON.stringify(ghjkl)) )\n// localStorage.setItem(\"movie\", JSON.stringify(markup))\n\n\n\n// function fghjkl() {\n//   const ghjk = books.map(book => book.title)\n//   console.log(ghjk)\n// }\n// fghjkl()\n// const dfgha = () => {\n//   for (let i = 0; i < books.length; i += 1) {\n//     console.log(books[i])\n//     abc.push(books[i])\n//     // localStorage.setItem(\"watched\", JSON.stringify(books[i]))\n//   }\n// }\n// dfgha()\n\n// let newTitle = {\n//     title: \"The Last Kingdom\",\n//     author: \"Bernard Cornwell\",\n//     rating: 8.38,\n//   }\n// let newTitle = {\n//     title: \"asdfghjkl\",\n//     author: \"sdfghjk\",\n//     rating: 5.58,\n//   }\n\n// localStorage.setItem(\"watched\", abc);\n// if(localStorage.length > 0){\n//   for (i = 0; i < localStorage.length; i++){\n  \n// let key = localStorage.key(i);\n// // let myItem = localStorage.getItem(key);\n// console.log(key);\n// }\n// }\n// else{\n// console.log('false');\n// }\n// let keys = Object.keys(localStorage);\n//  console.log(keys)\n// for (let key of keys) {\n//   console.log(key);\n// }\n// function dfghj(newTitle) {\n//   let keys = Object.values(localStorage);\n//   if (keys === newTitle) {\n//     console.log(\"name already saved\")\n//   } else {\n//     abc.push(newTitle)\n//   }\n// }\n// function fghjkjl(newTitle) {\n//     for (const book of books) {\n//       abc.push(book.title);\n//     }\n//      console.log(abc);\n//     if (abc.includes(newTitle.title)) {\n//       return `Error! Potion ${newTitle.title} is already in your inventory!`;\n//     } else {abc.push(newTitle)};\n//   }\n// console.log(abc)\n// fghjkjl(newTitle)\n\n\n\n // \"dark\n// ghjkl()\n// function ghjkl(books) {\n//   const markup = books.map(({ title, author, rating }) => {\n//     return `<div>\n//      <p class=\"info-item\">\n//        <b>Title</b>\n//       ${title}\n//      </p>\n//     <p class=\"info-item\">\n//        <b>author</b>\n//        ${author}\n//     </p>\n//     <p class=\"info-item\">\n//       <b>rating</b>\n//       ${rating}\n//      </p></div>`\n//   }).join(\"\")\n//   gallery.insertAdjacentHTML(\"beforeend\", markup)\n// }\n\n\nconst btnCom = document.querySelector(\".com\")\nconst btnComa = document.querySelector(\".coma\")\nconst btnComd = document.querySelector(\".comd\")\nconst btnDra = document.querySelector(\".dra\")\nconst btnDram = document.querySelector(\".dram\")\nconst btnDrama = document.querySelector(\".drama\")\nconst author = document.querySelector(\".a\")\nconst title = document.querySelector(\".t\")\nconst rating = document.querySelector(\".r\")\nconst deleted = document.querySelector(\".b\")\nconst deletedg = document.querySelector(\".v\")\n\n\nlet abc = [];\nconst books = [\n  {\n    title: \"The Last Kingdom\",\n    author: \"Bernard Cornwell\",\n    rating: 8.38,\n  },\n  {\n    title: \"На берегу спокойных вод\",\n    author: \"Роберт Шекли\",\n    rating: 8.51,\n  },\n  {\n    title: \"Сон смешного человека\",\n    author: \"Федор Достоевский\",\n    rating: 7.75,\n  },\n];\n// fghj()  // Проблемы функции : 1. если local storage пуст то не читает свойство length\n//         //                    2. не могу совместить ее с функцией которая уже есть в слушателе на кнопку\n// function fghj() {\n//   const q = localStorage.getItem(\"watched\");\n//   const qu = JSON.parse(q) || 0\n//   const leastArr = books.length < qu.length ? books : qu;\n//   console.log(leastArr)\n// const biggestArr = books.length >= qu.length ? books : qu;\n//   console.log(biggestArr)\n// const resultArray = leastArr.filter((item) => {\n//   return biggestArr.includes((item2) => {\n//     if (item2.title === item.title) {\n//       console.log(\"уже есть в списке\")\n//     }\n//   } )\n// });\n\n\n// }\n\n// ghj()\n// function ghj() {\n//   let matches = []\n//   console.log(matches) \n//   const q = localStorage.getItem(\"watched\");\n//   const qu = JSON.parse(q)\n  \n//   //  console.log(qu)\n//     for (let fg of qu){\n//       // console.log(fg)\n//       for (let i = 0; i < books.length; i += 1){\n//         // console.log(books[i])\n//         if (fg === books[i]) {\n//           matches.push(books[i])\n//            console.log(matches) \n//       //    console.log(fg) \n//       // console.log(\"already in the list\")\n//       }\n//       }\n      \n//     }\n  \n//   }\n\n// ghj()\n// function ghj() {\n//   let matches =[]\n//   const lista = localStorage.getItem(\"watched\");\n//   const listDatas = JSON.parse(lista)\n//   console.log(listDatas)\n//   for (let i = 0; i < books.length; i += 1){\n//     // console.log(books[i])\n//     for (let listDatam of listDatas) {\n//       if (listDatam === books[i]) {\n//            console.log(listDatam)\n//         //  matches.push(books[i])\n//         //  console.log(matches)\n//        }\n//       //  else {\n//   //        abc.push(books[i])\n//   // localStorage.setItem(\"watched\", JSON.stringify(abc))\n\n//       }\n//       }\n      \n//     }\n  \n  \n\n// btnCom.addEventListener(\"click\", () => {\n//   let q = localStorage.getItem(\"watched\");\n//   let qu = JSON.parse(q)\n//   const leastArr = books.length < qu.length ? books : qu;\n//   console.log(leastArr)\n//   const biggestArr = books.length >= qu.length ? books : qu;\n//   console.log(biggestArr)\n//   const resultArray = leastArr.filter((item) => {\n//     return biggestArr.some((item2) => {\n//       if (item2.title === item.title) {\n//         console.log(\"уже есть в списке\")\n//       } else {\n//          q = localStorage.getItem(\"watched\");\n//     try {\n//        qu = q ? JSON.parse(q) : [];\n//       // console.log( listData )\n//       qu.push(books[0]);\n//       const updatedList = JSON.stringify(qu);\n//       localStorage.setItem(\"watched\", updatedList);\n//     } catch (error) {\n//       console.log(\"parsing error\");\n//     }\n//       }\n//     })\n//   });\n\n// // console.log(resultArray);\n// }\n  \n//   //   abc.push(books[0])\n//   // localStorage.setItem(\"watched\", JSON.stringify(abc))\n// )\nbtnCom.addEventListener(\"click\", (e) => {\n  const list = localStorage.getItem(\"watched\");\n  try {\n    const listData = list ? JSON.parse(list) : [];\n    listData.push(books[0]);\n    console.log(listData)\n    const updatedList = JSON.stringify(listData);\n    localStorage.setItem(\"watched\", updatedList);\n  } catch (error) {\n    console.log(\"parsing error\");\n  }\n//    btnCom.innerHTML = 'удалить'\n//   btnCom.addEventListener(\"click\", () => {\n//     const wa = JSON.parse(localStorage.getItem('watched'));\n//     console.log(wa)\n   \n//    const gf = wa.splice(0, 1)\n//      console.log(wa)\n//     // for (w of wa) {\n//     //    console.log(w)\n//     //    w.splice(0, 1) \n//     // }\n  \n//     // localStorage.removeItem(\"watched\")\n//  btnCom.innerHTML = 'добавить в хранилище'\n// })\n  \n  \n//   // abc.push(books[1])\n//   // localStorage.setItem(\"watched\", JSON.stringify(abc))\n})\ndeleted.addEventListener(\"click\", () => {\n  let matches = [];\n  const wa = JSON.parse(localStorage.getItem('watched'));\n  console.log(wa)\n  //   wa.forEach((item) => {\n  //     // console.log(item)\n  //     books.forEach((item2) => {\n  //               //  console.log(item2)\n  //       if (item.title === item2.title) {\n  //         console.log(item.title) \n  //          console.log(item2.title)\n  //                 const g = wa.indexOf(item)\n  //                 console.log(g)\n  //                 const gh =  wa.splice(g, 1);\n  //                    console.log(gh)\n  //                 //   matches.push(wa)\n  //                  const updatedList = JSON.stringify(wa);\n  //     localStorage.setItem(\"watched\", updatedList);\n  //                 }\n  //             });\n  //         });\n  // console.log(matches)\n  // const gf = wa.some(value => value === books[0])\n  //  const ghj = Object.values(wa)\n  //   //  console.log(ghj)\n  //    const ghjj = Object.values(books)\n  // // console.log(ghjj)\n  // if (ghj === ghjj) {\n  //   matches.push(ghj)\n  //    console.log(matches)\n  // }\n  // const ghjk = books[0]\n  // console.log(ghjk)\n\n  // for (let foo of wa) {\n  //   // console.log(foo)\n  //   if (foo !== books[0]) {\n  const ghjk = books[0]\n  const yu = ghjk.title\n  console.log(yu)\n      const hy = wa.findIndex(option => option.title === yu)\n      console.log(hy)\n       const hf = wa.splice(hy, 1)\n       console.log(hf)\n    const updatedList = JSON.stringify(wa);\n   localStorage.setItem(\"watched\", updatedList);\n  \n  //     // console.log(books[0])\n  //     // console.log(foo.title)\n  //     // console.log(books[0])\n   \n  //     // const gf = wa.splice(0, 1)\n  //     // console.log(index.target)\n  //     // console.log(wa)\n  //     // const updatedList = JSON.stringify(wa);\n  //     //   localStorage.setItem(\"watched\", updatedList);\n  //   }\n  // }\n} \n)\ndeletedg.addEventListener(\"click\", () => {\n  const waa= JSON.parse(localStorage.getItem('watched'));\n  console.log(waa)\n  const ghjka = books[1]\n  const yy = ghjka.title\n  console.log(yy)\n      const hya = waa.findIndex(option => option.title === yy)\n      console.log(hya)\n       const hfa = waa.splice(hya, 1)\n       console.log(hfa)\n    const updatedLista = JSON.stringify(waa);\n   localStorage.setItem(\"watched\", updatedLista);\n})\nbtnComa.addEventListener(\"click\", (e) => {\n  const list = localStorage.getItem(\"watched\");\n   \n    try {\n      const listData = list ? JSON.parse(list) : [];\n    \n      listData.push(books[1]);\n      const updatedList = JSON.stringify(listData);\n      localStorage.setItem(\"watched\", updatedList);\n    } catch (error) {\n      console.log(\"parsing error\");\n  }\n\n//   // abc.push(books[1])\n//   // localStorage.setItem(\"watched\", JSON.stringify(abc))\n})\nbtnComd.addEventListener(\"click\", () => {\n      const list = localStorage.getItem(\"watched\");\n    try {\n      const listData = list ? JSON.parse(list) : [];\n      listData.push(books[2]);\n      const updatedList = JSON.stringify(listData);\n      localStorage.setItem(\"watched\", updatedList);\n    } catch (error) {\n      console.log(\"parsing error\");\n    }\n  // abc.push(books[2])\n  // localStorage.setItem(\"watched\", JSON.stringify(abc))\n})\n\n// btnDra.addEventListener(\"click\", () => {\n//        const list = localStorage.getItem(\"qu\");\n//     try {\n//       const listData = list ? JSON.parse(list) : [];\n//       listData.push(books[0]);\n//       const updatedList = JSON.stringify(listData);\n//       localStorage.setItem(\"qu\", updatedList);\n//     } catch (error) {\n//       console.log(\"parsing error\");\n//     }\n//   // localStorage.setItem(\"qu\", JSON.stringify(books[0]))\n// })\n// btnDram.addEventListener(\"click\", () => {\n//        const list = localStorage.getItem(\"qu\");\n//     try {\n//       const listData = list ? JSON.parse(list) : [];\n//       listData.push(books[1]);\n//       const updatedList = JSON.stringify(listData);\n//       localStorage.setItem(\"qu\", updatedList);\n//     } catch (error) {\n//       console.log(\"parsing error\");\n//     }\n//   // localStorage.setItem(\"qu\", JSON.stringify(books[1]))\n// })\n// btnDrama.addEventListener(\"click\", () => {\n//        const list = localStorage.getItem(\"qu\");\n//     try {\n//       const listData = list ? JSON.parse(list) : [];\n//       listData.push(books[2]);\n//       const updatedList = JSON.stringify(listData);\n//       localStorage.setItem(\"qu\", updatedList);\n//     } catch (error) {\n//       console.log(\"parsing error\");\n//     }\n//   // localStorage.setItem(\"qu\", JSON.stringify(books[2]))\n// })\n// watchBtn.addEventListener(\"click\", () => {\n//   const theme = localStorage.getItem(\"watched\");\n//   const fghj = JSON.parse(theme)\n// console.log(\"watched\", fghj);\n// })\n// queueBtn.addEventListener(\"click\", () => {\n//   const theme = localStorage.getItem(\"qu\");\n//   const fghj = JSON.parse(theme)\n// console.log(\"qu\",fghj);\n// })"],"names":["document","querySelector","$b8f9b7833fa37166$var$btnCom","$b8f9b7833fa37166$var$btnComa","$b8f9b7833fa37166$var$btnComd","$b8f9b7833fa37166$var$deleted","$b8f9b7833fa37166$var$deletedg","$b8f9b7833fa37166$var$books","title","author","rating","addEventListener","e","list","localStorage","getItem","listData","JSON","parse","push","console","log","updatedList","stringify","setItem","error","wa","yu","hy","findIndex","option","hf","splice","waa","yy","hya","hfa","updatedLista"],"version":3,"file":"index.66b183aa.js.map"}